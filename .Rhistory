data$date <- format(data$date, format = "%B %Y") #change to character from date class
str(data)
data <- tbl_df((rawData))
data <- select(data, -c(HighQN, MedQN, LowQN))
data <- tbl_df((rawData))
data <- select(data, -c(HighQN, MedQN, LowQN))
data$date = as.Date(as.character(data$dATE), format="%B%Y")
data$date = as.Date(as.character(data$date), format="%B%Y")
View(data)
data <- tbl_df((rawData))
data <- select(data, -c(HighQN, MedQN, LowQN))
data$date <- as.Date(format(data$date, format = "%B %Y")) #change to character from date class
data$date <- as.Date(format(data$date, format = "%B%Y")) #change to character from date class
aggregate(data$date, format(time(data$date), "%m %d"), sum)
log <- data.frame(Date = c("2013/05/25","2013/05/28","2013/05/31","2013/06/01","2013/06/02","2013/06/05","2013/06/07"),
Quantity = c(9,1,15,4,5,17,18))
str(log)
View(log)
log$Date <- as.Date(log$Date, "%Y/%m/%d")
View(log)
str(log)
log$Month <- as.Date(cut(log$Date, breaks = "month"))
log$Week <- as.Date(cut(log$Date, breaks = "week", start.on.monday = FALSE)) # changes weekly break point to Sunday
str(log)
rawData = read_csv("https://raw.githubusercontent.com/sebastianbarfort/sds/master/data/marijuana-street-price-clean.csv")
rawData = read_csv("https://raw.githubusercontent.com/sebastianbarfort/sds/master/data/marijuana-street-price-clean.csv")
data <- tbl_df((rawData))
data <- select(data, -c(HighQN, MedQN, LowQN))
data$Month <- as.Date(cut(data$date, breaks = "month"))
data$Week <- as.Date(cut(data$date, breaks = "week", start.on.monday = TRUE)) # changes weekly break point to Sunday
str(data)
data_MD <- filter(data, State=="Maryland")
ggplot(data = data_MD,
aes(Month, HighQ)) +
stat_summary(fun.y = sum, # adds up all
ggplot(data = data, aes(Month, HighQ)) +
stat_summary(fun.y = sum, # adds up all observations for the month
geom = "line") + # or "line"
scale_x_date(
labels = date_format("%Y-%m"),
breaks = "1 month") # custom x-axis labels
library("scales")
library("ggplot2")
ggplot(data = data, aes(Month, HighQ)) +
stat_summary(fun.y = sum, # adds up all observations for the month
geom = "line") + # or "line"
scale_x_date(
labels = date_format("%Y-%m"),
breaks = "1 month") # custom x-axis labels
log <- data.frame(Date = c("2013/05/25","2013/05/28","2013/05/31","2013/06/01","2013/06/02","2013/06/05","2013/06/07"),
Quantity = c(9,1,15,4,5,17,18))
log$Date <- as.Date(log$Date, "%Y/%m/%d")
log$Month <- as.Date(cut(log$Date, breaks = "month"))
log$Week <- as.Date(cut(log$Date, breaks = "week", start.on.monday = FALSE)) # changes weekly break point to Sunday
ggplot(data = log,
aes(Month, Quantity)) +
stat_summary(fun.y = sum, # adds up all observations for the month
geom = "bar") + # or "line"
scale_x_date(
labels = date_format("%Y-%m"),
breaks = "1 month") # custom x-axis labels
library(ggplot2)
library(scales)
log <- data.frame(Date = c("2013/05/25","2013/05/28","2013/05/31","2013/06/01","2013/06/02","2013/06/05","2013/06/07"),
Quantity = c(9,1,15,4,5,17,18))
log$Date <- as.Date(log$Date,
"%Y/%m/%d") # tabulate all the options here
log$Month <- as.Date(cut(log$Date,
breaks = "month"))
log$Week <- as.Date(cut(log$Date,
breaks = "week",
start.on.monday = FALSE)) # changes weekly break point to Sunday
ggplot(data = log,
aes(Month, Quantity)) +
stat_summary(fun.y = sum, # adds up all observations for the month
geom = "bar") + # or "line"
scale_x_date(
labels = date_format("%Y-%m"),
breaks = "1 month") # custom x-axis labels
ggplot(data = log,
aes(Week, Quantity)) +
stat_summary(fun.y = sum, # adds up all observations for the week
geom = "bar") + # or "line"
scale_x_date(
labels = date_format("%Y-%m-%d"),
breaks = "1 week") # custom x-axis labels
ggplot(data = log,
aes(Month, Quantity)) +
stat_summary(fun.y = sum, # adds up all observations for the month
geom = "bar") + # or "line"
scale_x_date(breaks = date_breaks("1 month")
ggplot(data = log,
aes(Month, Quantity)) +
stat_summary(fun.y = sum, # adds up all observations for the month
geom = "bar") + # or "line"
scale_x_date(breaks = date_breaks("1 month"))
ggplot(data = data, aes(Month, HighQ)) +
stat_summary(fun.y = sum, # adds up all observations for the month
geom = "line") + # or "line"
scale_x_date(breaks = date_breaks("1 month"))
ggplot(data = data, aes(Month, HighQ)) +
stat_summary(fun.y = sum, # adds up all observations for the month
geom = "line") + # or "line"
scale_x_date(breaks = date_breaks("1 month"), labels = date_format("%Y-%m"))
ggplot(data = data, aes(Month, HighQ)) +
stat_summary(fun.y = sum, # adds up all observations for the month
geom = "line") + # or "line"
scale_x_date(breaks = date_breaks("1 month"), labels = date_format("%Y-%m") +
geom_smooth(color="blue"))
ggplot(data = data, aes(Month, HighQ)) +
stat_summary(fun.y = sum, # adds up all observations for the month
geom = "line") + # or "line"
scale_x_date(breaks = date_breaks("1 month"), labels = date_format("%Y-%m"))
monthplot <- ggplot(data = data, aes(Month, HighQ)) +
stat_summary(fun.y = sum, # adds up all observations for the month
geom = "line") + # or "line"
scale_x_date(breaks = date_breaks("1 month"), labels = date_format("%Y-%m"))
monthplot = monthplot + geom_smooth(colour = "red")
monthplot
monthplot <- ggplot(data = data, aes(Month, HighQ)) +
stat_summary(fun.y = sum, geom = "line") + # or "line"
scale_x_date(breaks = date_breaks("1 month"), labels = date_format("%Y-%m"))
monthplot
monthplot <- ggplot(data = data, aes(Month, HighQ)) +
stat_summary(fun.y = sum, geom = "line") + geom_smooth(colour = "red") +# or "line"
scale_x_date(breaks = date_breaks("1 month"), labels = date_format("%Y-%m"))
monthplot <- ggplot(data = data, aes(Month, HighQ)) +
stat_summary(fun.y = sum, geom = "line") +geom_point(alpha = .05) +# or "line"
scale_x_date(breaks = date_breaks("1 month"), labels = date_format("%Y-%m"))
monthplot
monthplot <- ggplot(data = data, aes(Month, HighQ)) +
stat_summary(fun.y = sum, geom_smooth = color="red") +
scale_x_date(breaks = date_breaks("1 month"), labels = date_format("%Y-%m"))
last_month <- Sys.Date() - 0:29
df <- data.frame(
date = last_month,
price = runif(30)
)
base <- ggplot(df, aes(date, price)) +
geom_line()
base
base + scale_x_date(date_labels = "%b %d")
base
base + scale_x_date(date_breaks = "1 week", date_labels = "%W")
base
base + scale_x_date(date_minor_breaks = "1 day")
base
# Set limits
base + scale_x_date(limits = c(Sys.Date() - 7, NA))
base
base + scale_x_date(date_labels = "%b %d")
base
last_month <- Sys.Date() - 0:29
df <- data.frame(
date = last_month,
price = runif(30)
)
base <- ggplot(df, aes(date, price)) +
geom_line()
base
base + scale_x_date(date_labels = "%b %d")
base
base + scale_x_date(date_breaks = "1 week", date_labels = "%W")
base
base + scale_x_date(date_minor_breaks = "1 day")
base
# Set limits
base + scale_x_date(limits = c(Sys.Date() - 7, NA))
monthplot <- ggplot(data = data, aes(Month, HighQ)) +
stat_summary(fun.y = sum, geom = "line") +
scale_x_date(breaks = date_breaks("3 month"), labels = date_format("%Y-%m"))
monthplot
monthplot <- ggplot(data = data, aes(Month, HighQ)) +
stat_summary(fun.y = sum, geom = "line") +
scale_x_date(breaks = date_breaks("3 month"), labels = date_format("%m-%Y"))
monthplot
monthplot <- ggplot(data = data, aes(Month, HighQ)) +
stat_summary(fun.y = sum, geom = "line") +
scale_x_date(breaks = date_breaks("3 month"), labels = date_format("%m-%Y")) +
labs(y = "Marijuana Aver Monthly Price")
monthplot
str(data_MD)
monthplot <- ggplot(data = data, aes(Month, HighQ)) +
stat_summary(fun.y = mean, geom = "line") +
scale_x_date(breaks = date_breaks("3 month"), labels = date_format("%m-%Y")) +
labs(y = "Marijuana Aver Monthly Price")
monthplot
library("dplyr")
library("ggplot2")
library("scales")
library("readr")
rawData = read_csv("https://raw.githubusercontent.com/sebastianbarfort/sds/master/data/marijuana-street-price-clean.csv")
data <- tbl_df((rawData))
data <- select(data, -c(HighQN, MedQN, LowQN))
View(data)
str(data)
data$Month <- as.Date(cut(data$date, breaks = "month"))
data$Week <- as.Date(cut(data$date, breaks = "week", start.on.monday = TRUE)) # changes weekly break point to Sunday
data_MD <- filter(data, State=="Maryland")
View(data_MD)
monthplot <- ggplot(data = data, aes(Month, HighQ)) +
stat_summary(fun.y = mean, geom = "line") +
scale_x_date(breaks = date_breaks("3 month"), labels = date_format("%m-%Y")) +
labs(y = "Marijuana Aver Monthly Price")
monthplot
monthplot = monthplot + geom_smooth(colour = "red")
monthplot
shiny::runApp()
shiny::runApp()
library(shiny)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
monthplot
shiny::runApp()
shiny::runApp()
source('~/GitHub/JHU_Shiny/R/potScript.R')
library("dplyr")
library("ggplot2")
library("scales")
library("readr")
library("dplyr")
library("ggplot2")
library("scales")
library("readr")
rawData = read_csv("https://raw.githubusercontent.com/sebastianbarfort/sds/master/data/marijuana-street-price-clean.csv")
data <- tbl_df((rawData))
data <- select(data, -c(HighQN, MedQN, LowQN))
#data$date <- as.Date(format(data$date, format = "%B%Y")) #change to character from date class
#data$date = as.Date(as.character(data$date), format="%B%Y")
data$Month <- as.Date(cut(data$date, breaks = "month"))
data$Week <- as.Date(cut(data$date, breaks = "week", start.on.monday = TRUE)) # changes weekly break point to Sunday
data_MD <- filter(data, State=="Maryland")
# graph by month:
monthplot <- ggplot(data = data, aes(Month, HighQ)) +
stat_summary(fun.y = mean, geom = "line") +
scale_x_date(breaks = date_breaks("3 month"), labels = date_format("%m-%Y")) +
labs(y = "Marijuana Aver Monthly Price")
monthplot = monthplot + geom_smooth(colour = "red")
monthplot
p = ggplot(data = data_MD, aes(x = MonthYear, y = meanprice)) + geom_line()
#p = p + geom_point(alpha = .05) # add points
p = p + geom_line() # add points
p = p + geom_smooth(colour = "red")
#p = p + facet_wrap(~ State, scales = "free_y")
#p = p + scale_x_date(breaks = pretty_breaks(4))
p = p + labs(x = NULL, y = "Price ($)", title = "Price of Marijuana")
*****************
load data:
log <- data.frame(Date = c("2013/05/25","2013/05/28","2013/05/31","2013/06/01","2013/06/02","2013/06/05","2013/06/07"),
Quantity = c(9,1,15,4,5,17,18))
log
str(log)
log$Date <- as.Date(log$Date, "%Y/%m/%d")
# create variables of the week and month of each observation:
log$Month <- as.Date(cut(log$Date, breaks = "month"))
log$Week <- as.Date(cut(log$Date, breaks = "week", start.on.monday = FALSE)) # changes weekly break point to Sunday
str(log)
# graph by month:
ggplot(data = log,
aes(Month, Quantity)) +
stat_summary(fun.y = sum, # adds up all observations for the month
geom = "bar") + # or "line"
scale_x_date(
labels = date_format("%Y-%m"),
breaks = "1 month") # custom x-axis labels
****************************
-------------
rawData %>%
group_by(State) %>%
summarise(
m.price = mean(HighQ, na.rm = TRUE)
) %>%
arrange(desc(m.price))
rawData %>%
group_by(State) %>%
summarise(
m.price = mean(HighQ, na.rm = TRUE)
) %>%
arrange(desc(m.price))
p = ggplot(rawData, aes(x = date, y = HighQ))
p = p + geom_point(alpha = .05) # add points
p = p + geom_line() # add points
p = p + geom_smooth(colour = "red")
p = p + facet_wrap(~ State, scales = "free_y")
p = p + scale_x_date(breaks = pretty_breaks(4))
p = p + labs(x = NULL, y = "Price ($)", title = "Price of Marijuana")
library("dplyr")
library("scales")
library("ggplot2")
library("readr")
rawData = read_csv("https://raw.githubusercontent.com/sebastianbarfort/sds/master/data/marijuana-street-price-clean.csv")
data <- tbl_df((rawData))
data <- select(data, -c(HighQN, MedQN, LowQN))
data$Month <- as.Date(cut(data$date, breaks = "month"))
data$Week <- as.Date(cut(data$date, breaks = "week", start.on.monday = TRUE)) # changes weekly break point to Sunday
View(data)
data_MD <- filter(data, State=="Maryland")
monthplot <- ggplot(data = data, aes(Week, HighQ)) +
stat_summary(fun.y = mean, geom = "line") +
scale_x_date(breaks = date_breaks("8 week"), labels = date_format("%m-%Y")) +
labs(y = "Marijuana Ave Price")
monthplot = monthplot + geom_smooth(colour = "red")
monthplot
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
monthplot <- ggplot(data = data, aes(Week, HighQ)) +
stat_summary(fun.y = mean, geom = "line") +
scale_x_date(breaks = date_breaks("8 week"), labels = date_format("%m-%Y")) +
labs(y = "Marijuana Ave Price")
monthplot = monthplot + geom_smooth(colour = "red")
monthplot
str(data)
shiny::runApp()
shiny::runApp()
library(ggplot2)
shiny::runApp()
ibrary("dplyr")
library("ggplot2")
library("scales")
library("readr")
rawData = read_csv("https://raw.githubusercontent.com/sebastianbarfort/sds/master/data/marijuana-street-price-clean.csv")
data <- tbl_df((rawData))
data <- select(data, -c(HighQN, MedQN, LowQN))
#data$date <- as.Date(format(data$date, format = "%B%Y")) #change to character from date class
#data$date = as.Date(as.character(data$date), format="%B%Y")
data$Month <- as.Date(cut(data$date, breaks = "month"))
data$Week <- as.Date(cut(data$date, breaks = "week", start.on.monday = TRUE)) # changes weekly break point to Sunday
data_MD <- filter(data, State=="Maryland")
# graph by month:
monthplot <- ggplot(data = data, aes(Week, HighQ)) +
stat_summary(fun.y = mean, geom = "line") +
scale_x_date(breaks = date_breaks("8 week"), labels = date_format("%m-%Y")) +
labs(y = "Marijuana Ave Price")
monthplot = monthplot + geom_smooth(colour = "red")
monthplot
shiny::runApp()
monthplot <- ggplot(data = data, aes(Week, HighQ)) +
stat_summary(fun.y = mean, geom = "line") +
scale_x_date(breaks = date_breaks("8 week"), labels = date_format("%m-%Y")) +
labs(y = "Marijuana Ave Price")
monthplot = monthplot + geom_smooth(colour = "red")
monthplot
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
rawData = read_csv("https://raw.githubusercontent.com/sebastianbarfort/sds/master/data/marijuana-street-price-clean.csv")
data <- tbl_df((rawData))
data <- select(data, -c(HighQN, MedQN, LowQN))
data$Month <- as.Date(cut(data$date, breaks = "month"))
data$Week <- as.Date(cut(data$date, breaks = "week", start.on.monday = TRUE)) # changes weekly break point to Sunday
View(data)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
cen_reg_2000 <- read.csv(CensusRegions2000, header = TRUE)
cen_reg_2000 <- read.csv("CensusRegions2000", header = TRUE)
cen_reg_2000 <- read.csv("CensusRegions2000", header = TRUE)
cen_reg_2000 <- read.csv("CensusRegions2000.csv", header = TRUE)
cen_reg_2000 <- read.csv("./shiny2/CensusRegions2000.csv", header = TRUE)
cen_reg_2010 <- read.csv("./shiny2/CensusRegions2010.csv", header = TRUE)
cen_div_2000 <- read.csv("./shiny2/CensusDivisions2000.csv", header = TRUE)
cen_div_2010 <- read.csv("./shiny2/CensusDivisions2010.csv", header = TRUE)
View(cen_div_2000)
View(cen_reg_2000)
cen_reg_2000 <- select(cen_reg_2000, -c(MTFCC:GEOID), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
library(dplyr)
cen_reg_2000 <- select(cen_reg_2000, -c(MTFCC:GEOID), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_reg_2010 <- select(cen_reg_2000, -c(MTFCC:GEOID), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
View(cen_reg_2010)
cen_div_2000 <- select(cen_div_2000, -c(MTFCC:GEOID), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_div_2010 <- select(cen_div_2000, -c(MTFCC:GEOID), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_reg_2010 <- select(cen_reg_2010, -c(MTFCC:GEOID), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_div_2010 <- select(cen_div_2010, -c(MTFCC:GEOID), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_reg_2000 <- read.csv("./shiny2/CensusRegions2000.csv", header = TRUE)
cen_reg_2010 <- read.csv("./shiny2/CensusRegions2010.csv", header = TRUE)
cen_div_2000 <- read.csv("./shiny2/CensusDivisions2000.csv", header = TRUE)
cen_div_2010 <- read.csv("./shiny2/CensusDivisions2010.csv", header = TRUE)
View(cen_reg_2000)
View(cen_div_2000)
cen_reg_2000 <- select(cen_reg_2000, -c(MTFCC:REGION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_reg_2010 <- select(cen_reg_2010, -c(MTFCC:REGION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_div_2000 <- select(cen_div_2000, -c(MTFCC:DIVISION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_div_2010 <- select(cen_div_2010, -c(MTFCC:DIVISION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
cen_reg_2000 <- read.csv("./shiny2/CensusRegions2000.csv", header = TRUE)
cen_reg_2010 <- read.csv("./shiny2/CensusRegions2010.csv", header = TRUE)
cen_div_2000 <- read.csv("./shiny2/CensusDivisions2000.csv", header = TRUE)
cen_div_2010 <- read.csv("./shiny2/CensusDivisions2010.csv", header = TRUE)
cen_reg_2000 <- select(cen_reg_2000, -c(MTFCC:REGION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_reg_2010 <- select(cen_reg_2010, -c(MTFCC:REGION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_div_2000 <- select(cen_div_2000, -c(MTFCC:DIVISION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_div_2010 <- select(cen_div_2010, -c(MTFCC:DIVISION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
cen_reg_2000 <- read.csv("../shiny2/CensusRegions2000.csv", header = TRUE)
cen_reg_2000 <- read.csv("../shiny2/CensusRegions2000.csv", header = TRUE)
cen_reg_2000 <- read.csv("../shiny2/CensusRegions2000.csv", header = TRUE)
cen_reg_2000 <- read.csv("./shiny2/CensusRegions2000.csv", header = TRUE)
View(cen_reg_2000)
cen_reg_2000 <- select(cen_reg_2000, -c(MTFCC:REGION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
View(cen_reg_2000)
library(DT)
shiny::runApp('shiny2')
DT::datatable(iris)
cen_reg_2000 <- read.csv("../shiny2/CensusRegions2000.csv", header = TRUE)
cen_reg_2000 <- read.csv("./shiny2/CensusRegions2000.csv", header = TRUE)
cen_reg_2010 <- read.csv("./shiny2/CensusRegions2010.csv", header = TRUE)
cen_div_2000 <- read.csv("./shiny2/CensusDivisions2000.csv", header = TRUE)
cen_div_2010 <- read.csv("./shiny2/CensusDivisions2010.csv", header = TRUE)
cen_reg_2000 <- select(cen_reg_2000, -c(MTFCC:REGION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_reg_2010 <- select(cen_reg_2010, -c(MTFCC:REGION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_div_2000 <- select(cen_div_2000, -c(MTFCC:DIVISION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_div_2010 <- select(cen_div_2010, -c(MTFCC:DIVISION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
class(cen_div_2000)
View(cen_div_2000)
datatable(cen_div_2000)
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
View(cen_div_2000)
view(cen_div_2000)
View(cen_div_2010)
View(cen_div_2010)
View(cen_reg_2000)
View(cen_reg_2010)
View(cen_div_2000)
View(cen_div_2010)
