library("readr")
rawData = read_csv("https://raw.githubusercontent.com/sebastianbarfort/sds/master/data/marijuana-street-price-clean.csv")
data <- tbl_df((rawData))
data <- select(data, -c(HighQN, MedQN, LowQN))
#data$date <- as.Date(format(data$date, format = "%B%Y")) #change to character from date class
#data$date = as.Date(as.character(data$date), format="%B%Y")
data$Month <- as.Date(cut(data$date, breaks = "month"))
data$Week <- as.Date(cut(data$date, breaks = "week", start.on.monday = TRUE)) # changes weekly break point to Sunday
data_MD <- filter(data, State=="Maryland")
# graph by month:
monthplot <- ggplot(data = data, aes(Month, HighQ)) +
stat_summary(fun.y = mean, geom = "line") +
scale_x_date(breaks = date_breaks("3 month"), labels = date_format("%m-%Y")) +
labs(y = "Marijuana Aver Monthly Price")
monthplot = monthplot + geom_smooth(colour = "red")
monthplot
p = ggplot(data = data_MD, aes(x = MonthYear, y = meanprice)) + geom_line()
#p = p + geom_point(alpha = .05) # add points
p = p + geom_line() # add points
p = p + geom_smooth(colour = "red")
#p = p + facet_wrap(~ State, scales = "free_y")
#p = p + scale_x_date(breaks = pretty_breaks(4))
p = p + labs(x = NULL, y = "Price ($)", title = "Price of Marijuana")
*****************
load data:
log <- data.frame(Date = c("2013/05/25","2013/05/28","2013/05/31","2013/06/01","2013/06/02","2013/06/05","2013/06/07"),
Quantity = c(9,1,15,4,5,17,18))
log
str(log)
log$Date <- as.Date(log$Date, "%Y/%m/%d")
# create variables of the week and month of each observation:
log$Month <- as.Date(cut(log$Date, breaks = "month"))
log$Week <- as.Date(cut(log$Date, breaks = "week", start.on.monday = FALSE)) # changes weekly break point to Sunday
str(log)
# graph by month:
ggplot(data = log,
aes(Month, Quantity)) +
stat_summary(fun.y = sum, # adds up all observations for the month
geom = "bar") + # or "line"
scale_x_date(
labels = date_format("%Y-%m"),
breaks = "1 month") # custom x-axis labels
****************************
-------------
rawData %>%
group_by(State) %>%
summarise(
m.price = mean(HighQ, na.rm = TRUE)
) %>%
arrange(desc(m.price))
rawData %>%
group_by(State) %>%
summarise(
m.price = mean(HighQ, na.rm = TRUE)
) %>%
arrange(desc(m.price))
p = ggplot(rawData, aes(x = date, y = HighQ))
p = p + geom_point(alpha = .05) # add points
p = p + geom_line() # add points
p = p + geom_smooth(colour = "red")
p = p + facet_wrap(~ State, scales = "free_y")
p = p + scale_x_date(breaks = pretty_breaks(4))
p = p + labs(x = NULL, y = "Price ($)", title = "Price of Marijuana")
library("dplyr")
library("scales")
library("ggplot2")
library("readr")
rawData = read_csv("https://raw.githubusercontent.com/sebastianbarfort/sds/master/data/marijuana-street-price-clean.csv")
data <- tbl_df((rawData))
data <- select(data, -c(HighQN, MedQN, LowQN))
data$Month <- as.Date(cut(data$date, breaks = "month"))
data$Week <- as.Date(cut(data$date, breaks = "week", start.on.monday = TRUE)) # changes weekly break point to Sunday
View(data)
data_MD <- filter(data, State=="Maryland")
monthplot <- ggplot(data = data, aes(Week, HighQ)) +
stat_summary(fun.y = mean, geom = "line") +
scale_x_date(breaks = date_breaks("8 week"), labels = date_format("%m-%Y")) +
labs(y = "Marijuana Ave Price")
monthplot = monthplot + geom_smooth(colour = "red")
monthplot
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
monthplot <- ggplot(data = data, aes(Week, HighQ)) +
stat_summary(fun.y = mean, geom = "line") +
scale_x_date(breaks = date_breaks("8 week"), labels = date_format("%m-%Y")) +
labs(y = "Marijuana Ave Price")
monthplot = monthplot + geom_smooth(colour = "red")
monthplot
str(data)
shiny::runApp()
shiny::runApp()
library(ggplot2)
shiny::runApp()
ibrary("dplyr")
library("ggplot2")
library("scales")
library("readr")
rawData = read_csv("https://raw.githubusercontent.com/sebastianbarfort/sds/master/data/marijuana-street-price-clean.csv")
data <- tbl_df((rawData))
data <- select(data, -c(HighQN, MedQN, LowQN))
#data$date <- as.Date(format(data$date, format = "%B%Y")) #change to character from date class
#data$date = as.Date(as.character(data$date), format="%B%Y")
data$Month <- as.Date(cut(data$date, breaks = "month"))
data$Week <- as.Date(cut(data$date, breaks = "week", start.on.monday = TRUE)) # changes weekly break point to Sunday
data_MD <- filter(data, State=="Maryland")
# graph by month:
monthplot <- ggplot(data = data, aes(Week, HighQ)) +
stat_summary(fun.y = mean, geom = "line") +
scale_x_date(breaks = date_breaks("8 week"), labels = date_format("%m-%Y")) +
labs(y = "Marijuana Ave Price")
monthplot = monthplot + geom_smooth(colour = "red")
monthplot
shiny::runApp()
monthplot <- ggplot(data = data, aes(Week, HighQ)) +
stat_summary(fun.y = mean, geom = "line") +
scale_x_date(breaks = date_breaks("8 week"), labels = date_format("%m-%Y")) +
labs(y = "Marijuana Ave Price")
monthplot = monthplot + geom_smooth(colour = "red")
monthplot
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
rawData = read_csv("https://raw.githubusercontent.com/sebastianbarfort/sds/master/data/marijuana-street-price-clean.csv")
data <- tbl_df((rawData))
data <- select(data, -c(HighQN, MedQN, LowQN))
data$Month <- as.Date(cut(data$date, breaks = "month"))
data$Week <- as.Date(cut(data$date, breaks = "week", start.on.monday = TRUE)) # changes weekly break point to Sunday
View(data)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
cen_reg_2000 <- read.csv(CensusRegions2000, header = TRUE)
cen_reg_2000 <- read.csv("CensusRegions2000", header = TRUE)
cen_reg_2000 <- read.csv("CensusRegions2000", header = TRUE)
cen_reg_2000 <- read.csv("CensusRegions2000.csv", header = TRUE)
cen_reg_2000 <- read.csv("./shiny2/CensusRegions2000.csv", header = TRUE)
cen_reg_2010 <- read.csv("./shiny2/CensusRegions2010.csv", header = TRUE)
cen_div_2000 <- read.csv("./shiny2/CensusDivisions2000.csv", header = TRUE)
cen_div_2010 <- read.csv("./shiny2/CensusDivisions2010.csv", header = TRUE)
View(cen_div_2000)
View(cen_reg_2000)
cen_reg_2000 <- select(cen_reg_2000, -c(MTFCC:GEOID), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
library(dplyr)
cen_reg_2000 <- select(cen_reg_2000, -c(MTFCC:GEOID), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_reg_2010 <- select(cen_reg_2000, -c(MTFCC:GEOID), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
View(cen_reg_2010)
cen_div_2000 <- select(cen_div_2000, -c(MTFCC:GEOID), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_div_2010 <- select(cen_div_2000, -c(MTFCC:GEOID), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_reg_2010 <- select(cen_reg_2010, -c(MTFCC:GEOID), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_div_2010 <- select(cen_div_2010, -c(MTFCC:GEOID), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_reg_2000 <- read.csv("./shiny2/CensusRegions2000.csv", header = TRUE)
cen_reg_2010 <- read.csv("./shiny2/CensusRegions2010.csv", header = TRUE)
cen_div_2000 <- read.csv("./shiny2/CensusDivisions2000.csv", header = TRUE)
cen_div_2010 <- read.csv("./shiny2/CensusDivisions2010.csv", header = TRUE)
View(cen_reg_2000)
View(cen_div_2000)
cen_reg_2000 <- select(cen_reg_2000, -c(MTFCC:REGION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_reg_2010 <- select(cen_reg_2010, -c(MTFCC:REGION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_div_2000 <- select(cen_div_2000, -c(MTFCC:DIVISION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_div_2010 <- select(cen_div_2010, -c(MTFCC:DIVISION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
cen_reg_2000 <- read.csv("./shiny2/CensusRegions2000.csv", header = TRUE)
cen_reg_2010 <- read.csv("./shiny2/CensusRegions2010.csv", header = TRUE)
cen_div_2000 <- read.csv("./shiny2/CensusDivisions2000.csv", header = TRUE)
cen_div_2010 <- read.csv("./shiny2/CensusDivisions2010.csv", header = TRUE)
cen_reg_2000 <- select(cen_reg_2000, -c(MTFCC:REGION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_reg_2010 <- select(cen_reg_2010, -c(MTFCC:REGION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_div_2000 <- select(cen_div_2000, -c(MTFCC:DIVISION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_div_2010 <- select(cen_div_2010, -c(MTFCC:DIVISION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
cen_reg_2000 <- read.csv("../shiny2/CensusRegions2000.csv", header = TRUE)
cen_reg_2000 <- read.csv("../shiny2/CensusRegions2000.csv", header = TRUE)
cen_reg_2000 <- read.csv("../shiny2/CensusRegions2000.csv", header = TRUE)
cen_reg_2000 <- read.csv("./shiny2/CensusRegions2000.csv", header = TRUE)
View(cen_reg_2000)
cen_reg_2000 <- select(cen_reg_2000, -c(MTFCC:REGION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
View(cen_reg_2000)
library(DT)
shiny::runApp('shiny2')
DT::datatable(iris)
cen_reg_2000 <- read.csv("../shiny2/CensusRegions2000.csv", header = TRUE)
cen_reg_2000 <- read.csv("./shiny2/CensusRegions2000.csv", header = TRUE)
cen_reg_2010 <- read.csv("./shiny2/CensusRegions2010.csv", header = TRUE)
cen_div_2000 <- read.csv("./shiny2/CensusDivisions2000.csv", header = TRUE)
cen_div_2010 <- read.csv("./shiny2/CensusDivisions2010.csv", header = TRUE)
cen_reg_2000 <- select(cen_reg_2000, -c(MTFCC:REGION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_reg_2010 <- select(cen_reg_2010, -c(MTFCC:REGION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_div_2000 <- select(cen_div_2000, -c(MTFCC:DIVISION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_div_2010 <- select(cen_div_2010, -c(MTFCC:DIVISION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
class(cen_div_2000)
View(cen_div_2000)
datatable(cen_div_2000)
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
View(cen_div_2000)
view(cen_div_2000)
View(cen_div_2010)
View(cen_div_2010)
View(cen_reg_2000)
View(cen_reg_2010)
View(cen_div_2000)
View(cen_div_2010)
shiny::runApp('shiny2')
install.packages("DT")
shiny::runApp('shiny2')
str(data)
?scipen
??scipen
shiny::runApp('shiny2')
View(data)
options("scipen"=100)
cen_reg_2000 <- read.csv("../shiny2/CensusRegions2000.csv", header = TRUE)
cen_reg_2010 <- read.csv("../shiny2/CensusRegions2010.csv", header = TRUE)
cen_div_2000 <- read.csv("../shiny2/CensusDivisions2000.csv", header = TRUE)
cen_div_2010 <- read.csv("../shiny2/CensusDivisions2010.csv", header = TRUE)
cen_reg_2000 <- read.csv("./shiny2/CensusRegions2000.csv", header = TRUE)
cen_reg_2010 <- read.csv("./shiny2/CensusRegions2010.csv", header = TRUE)
cen_div_2000 <- read.csv("./shiny2/CensusDivisions2000.csv", header = TRUE)
cen_div_2010 <- read.csv("./shiny2/CensusDivisions2010.csv", header = TRUE)
View(cen_div_2000)
cen_reg_2000 <- select(cen_reg_2000, -c(MTFCC:REGION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_reg_2010 <- select(cen_reg_2010, -c(MTFCC:REGION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_div_2000 <- select(cen_div_2000, -c(MTFCC:DIVISION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
cen_div_2010 <- select(cen_div_2010, -c(MTFCC:DIVISION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
View(cen_div_2000)
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
format(10000000000, scientific = FALSE, big.mark = ",")
format(cen_div_2000$AREALIAND, scientific=FALSE, big.mark = ",")
class(cen_div_2000$AREALAND)
format(cen_div_2000$AREALAND, scientific=FALSE, big.mark = ",")
View(cen_div_2000)
cen_div_2000 <- format(cen_div_2000$AREALAND, scientific = FALSE, big.mark = ","
)
cen_div_2000 <- read.csv("./shiny2/CensusDivisions2000.csv", header = TRUE)
cen_div_2000 <- select(cen_div_2000, -c(MTFCC:DIVISION), -LSADC, -FUNCSTAT, -HU100, -c(CENTLAT:INTPTLON))
sprintf(20.1, fmt=’%.2f’)
library(DT)
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
basename <-c("Northeast", "Midwest", "South", "West")
basename_reg <-c("Northeast", "Midwest", "South", "West")
pop_reg <- c(3.21, 3.94, 14.29, 13.84)
plot(basename_reg, pop_reg)
plot(basename_reg, pop_reg)
plot(basename_reg, pop_reg)
basename_reg <-c("Northeast", "Midwest", "South", "West")
pop_reg <- c(3.21, 3.94, 14.29, 13.84)
plot(basename_reg, pop_reg)
barplot(basename_reg, pop_reg)
barplot(pop_reg)
barplot(pop_reg, names.arg = basename_reg)
barplot(pop_reg, names.arg = basename_reg, ylab="Population Growth %")
barplot(pop_reg, names.arg = basename_reg, ylab="Population Growth %", text(pop_reg, pos=3))
barplot(pop_reg, names.arg = basename_reg, ylab="Population Growth %", text(pop_reg, pop_reg,pos=3))
barplot(pop_reg, names.arg = basename_reg, ylab="Population Growth %", color="lightblue")
barplot(pop_reg, names.arg = basename_reg, ylab="Population Growth %", col="lightblue")
barplot(pop_reg, names.arg = basename_reg, ylab="Population Growth %", col="lightblue", border = "lightblue")
barplot(pop_reg, names.arg = basename_reg, ylab="Population Growth %", col="lightgreen", border = "lightblue")
basename_div <- c("New England", "Middle Atlantic", "East North Central", "West North Central", "South Atlantic",
"East South Central", "West South Central", "Mountain", "Pacific")
pop_div <-c(3.75, 3.03, 2.80, 6.59, 15.47, 8.28, 15.59, 21.42, 10.78)
barplot(pop_div, names.arg = basename_div, ylab="Population Growth %", col="lightgreen", border = "lightblue")
barplot(pop_div, names.arg = basename_div, ylab="Population Growth %", col="lightgreen", border = "lightblue", las=2)
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
barplot(C(3,5,2))
shiny::runApp('shiny2')
basename_reg <-c("Northeast", "Midwest", "South", "West")
pop_reg <- c(3.21, 3.94, 14.29, 13.84)
barplot(pop_reg, names.arg = basename_reg, ylab="Population Growth %", col="lightgreen", border = "lightblue")
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
barplot(popdata)
barplot(pop_div)
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
pop_reg <- c(3.21, 3.94, 14.29, 13.84)
class(pop_reg)
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
library(shiny)
runExample("06_tabsets")
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
* You can also see a plot of the
a. You can also see a plot of the
a. You can also see a plot of the
a. You can also see a plot of the
3. Once your selections are made, a data table is presented.
+ You can also see a plot of the
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
par("mar")
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
shiny::runApp('shiny2')
library("shinyapps", lib.loc="~/R/win-library/3.2")
getwd()
setwd("~/GitHub/JHU_Shiny/shiny2")
getwd()
deployApp()
shiny::runApp('shiny2')
basename_reg <-c("Northeast", "Midwest", "South", "West")
pop_reg <- c(3.21, 3.94, 14.29, 13.84)
barplot(pop_reg, names.arg = basename_reg, ylab="Population Growth %", col="lightgreen", border = "lightblue")
